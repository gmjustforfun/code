这个包存放pso相关的实验
dem0.gpso主要是APSO论文的几个实验，根据实验要求不同，编写不同的pso相关类
-----------------------------------------------------------------------------------------
实验1：pso种群分布信息实验
在编写gpso测测试一个二维函数时变种群分布时，在第50到实际最优点由（-5，-5）跃变道（5，5）
但是发现，种群在第49代收敛到第一个最优解，但是50代之后一直难以跳出，达到第二次收敛
该问题解决的关键在于第50代时要改变适应值函数，重新计算粒子的适应值和重置全局最优y
         if iter_num==49:
              self.func = func_transformer(sphere2dim1) # time-varying,改变目标函数
              # 尝试在第50代随机种群分布，发现还是没法跳出第一次收敛的最优解
              self.cal_y()  #因为目标函数改变了，要重新计算此时种群对应的适应值
              self.pbest_y = self.Y.copy() #更新个体最优适应值
              self.pbest_x = self.X.copy() #更新个体最优位置
              self.update_pbest()    # 更新粒子的历史最优
              self.gbest_y = np.inf  # 此时新的历史最优设为inf
------------------------------------------------------------------------------------------
实验2：ESE的进化因子f的变化实验
    实验结果和论文结果相差较大,已解决，f7不太对
    调整参数
    看公式
    时变的理解
    有需要放到APSO
     # if部分是为了做实验2，如果不需要可以注释
            # if iter_num == 49:
            #     # 这四个语句是为了测试实验二，四个时变函数的进化因子变化图，
            #     # 如果要做实验2，根据目标函数选择即可
            #     self.func = func_transformer(sphere_tv)  # time-varying,改变目标函数
            #     # self.func = func_transformer(schwefels_tv)  # time-varying,改变目标函数
            #     # self.func = func_transformer(rosenbrock_tv)  # time-varying,改变目标函数
            #     # self.func = func_transformer(schewel_tv)  # time-varying,改变目标函数
            #
            #     self.cal_y()                      # 因为目标函数改变了，要重新计算此时种群对应的适应值
            #     self.pbest_y = self.Y.copy()      # 更新个体最优适应值
            #     self.pbest_x = self.X.copy()      # 更新个体最优位置
            #     self.update_pbest()               # 更新粒子的历史最优
            #     self.gbest_y = np.inf             # 此时新的历史最优设为inf
------------------------------------------------------------------------------------------
实验3：GPSO的平均迭代次数统计，指定精度！！！！！！！！！！！！！！！！！！！！！！！！！！

一次实验：
the time for 1 APSO trials  of f1 is 503
MEAN FEs IN OBTAINING ACCEPTABLE SOLUTIONS BY GPSO WITH PARAMETER ADAPTATION 376
0

the time for 1 GPSO trials  of f1 is 68
MEAN FEs IN OBTAINING ACCEPTABLE SOLUTIONS BY GPSO WITHOUT PARAMETER ADAPTATION 76071
8.610565866089228e-43


30次试验
the time for 30 GPSO trials  of f1 is 2055
MEAN FEs IN OBTAINING ACCEPTABLE SOLUTIONS BY GPSO WITHOUT PARAMETER ADAPTATION 71043
MEAN SOLUTIONS OF THE 30 TRIALS OBTAINED BY GPSO WITHOUT PARAMETER ADAPTATION F1:666
STD OF THE 30 TRIALS OBTAINED BY GPSO WITHOUT PARAMETER ADAPTATION F1:2494
Best SOLUTIONS OF THE 30 TRIALS OBTAINED BY GPSO WITHOUT PARAMETER ADAPTATION F1:0
[74586, 74316, 76194, 75775, 74483, 76590, 73470, 77899, 76452, 74481, 76764, 76998, 77654, 77295, 75850, 75742, 74440, 75971, 77717, 75334, 75482, 75848, 74952, 77505, 76730, 0, 0, 77650, 76444, 78692]
[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 10000.0, 10000.0, 0.0, 0.0, 0.0]


the time for 30 APSO trials  of f1 is 14326
MEAN FEs IN OBTAINING ACCEPTABLE SOLUTIONS BY GPSO WITHOUT PARAMETER ADAPTATION 172
MEAN SOLUTIONS OF THE 30 TRIALS OBTAINED BY GPSO WITHOUT PARAMETER ADAPTATION F1:2000
STD OF THE 30 TRIALS OBTAINED BY GPSO WITHOUT PARAMETER ADAPTATION F1:4760
Best SOLUTIONS OF THE 30 TRIALS OBTAINED BY GPSO WITHOUT PARAMETER ADAPTATION F1:0
[348, 373, 0, 0, 0, 0, 417, 0, 430, 367, 399, 0, 0, 0, 492, 354, 416, 0, 0, 0, 0, 0, 0, 390, 417, 0, 375, 410, 0, 0]
[6.98919735424655e-07, 5.8614595765188624e-09, 10000.000000000002, 0.010849224103369722, 0.1088683370539466, 8.249518492879536, 7.579415320000834e-05, 0.013806768877473353, 1.463089423578669e-11, 1.8107678747682944e-07, 1.5149390304365562e-14, 1.75985413823721, 0.022138669188628682, 10000.00011104115, 0.0002644054870063012, 0.002098930003174004, 4.206230549189954e-08, 10000.989973475338, 10000.135193907423, 0.190047056019536, 20000.000072575192, 1.3025296902008632, 3.1938171845054333, 1.8002064279723e-22, 0.0017796925957792532, 0.031032621245681555, 1.5138149384234117e-05, 0.0005071121716130722, 0.7825833411195093, 8.848125913735505]

问题较大，为什么GPSO又快结果又好
            APSO很慢，效果非常差

            问题1：加速系数忘记限制在【1.5,2.5】之间，导致后面变得绝对值非常大，切一正一负

            加速系数的自适应加加减减弄错了，修改之后，改进很多，但是不稳定，有时很好有时很不好

              Sphere      Schwefel_P222      Quadric      Rosenbrock       Step  \
mean score   0.000013       0.006222         0.000031     32.917311       0.000000
mean time   27.706415      27.879645         75.503183     69.117596      38.329933

            Quadric_Noise      Schwefel       Rastrigin     Ackley       Griewank
mean score    0.127165         -12427.344353   0.033624     0.059375      0.031305
mean time     29.831922         47.589104      58.135000    42.350906     65.730850